第21章 创建和操纵表
本章讲表的创建、更改和删除
1.创建表的方式：a 使用DBMS创建表 b 使用Mysql语句操纵创建
2.创建新表使用CREATE TABLE 并且要给出新表的名称， 表列的名字和定义，用逗号分隔
3.如果你想在一个表不存在时创建它，应该在表名后给出IF NOT EXISTS 这样做不检查已有表的模式是否与你打算创建的表模式相匹配
  她只是查看表名是否存在。
4.定义表时用到MOT NULL表示不允许空值
5.主键可以由多个列组合表示，但是要求依然时唯一的。
6.可以设置多个主键，格式为PRIMARY　KEY（ｋｋｋ，ｍｍｍ）列名之间需要用逗号分隔。
7.主键可以在创建表的时候定义或者在创建表之后定义
8.主键中只能使用不允许NULL值的列
9.每个表只允许使用一个AUTO_INCREMENT 列，而且她必须被索引（如，通过是他成为主键）
10.如果一个列被指定为AUTO_INCREMENT但是部分行又不想使用她自动生成的数字，这个时候就可以简单地在INSERT语句中指定一个值，
   只要她不与现存地值冲突。后续地增量将开始使用该手工插入地值。
11.使用SELECT last_insert_id(); 可以查看一个表最后插入行地AUTO_INCREMENT的值。
12.mysql不允许函数作为默认值，只支持常量
13.mysql不同于其他DBMS软件的地方在于她支持多引擎
14.不指定引擎的话，一般会默认使用My ISAM引擎
15.InnoDB是一个可靠的事物处理引擎，她不支持全文本搜索
16.MEMORY在功能等同于My ISAM，但是由于数据存储在内存中，速度快（特别适用于临时表）
17.MyISAM是一个性能极佳的引擎，它支持全文本搜索，但不支持事务处理。
18.一个表中只能使用一种引擎，但是一个数据库中可以使用多种引擎
19.重点：外键不能跨引擎，即使用一个引擎的表不能引用具有使用不同引擎的表的外键。


20.使用ALTER TABLE语句更新表，理想情况是，当表中存储了数据后就不应该再更新表了
21.ALTER TABLE vendors                     ALTER TABLE vendors
   ADD vend_phone CHAR(20);                DROP COLUMN vend_phone;
22.ALTER TABLE orderitems  #建立外键连接
   ADD CONSTRAINT fk_orderitems_orders  #写出需要建立联结的两个表名
   FOREIGN KEY(order_num)  #写出两个表中的需要联结的列
   REFERENCES orders（order_num);
23.同一个表与其他多个表进行联结时，可以使用一个ALTER TABLE语句，然后不同的联结之间使用逗号分隔
24.复杂的表结构更改一般需要手动删除工程，它涉及以下步骤：
       用新列布局创建一个新表
       使用INSERT SELECT语句从旧表中复制数据到新表。如有必要，可以使用转换函数和计算字段
       检查包含所需数据的新表
       重命名旧表（如果确定，可以删除它）
       用旧表原来的名字重命名新表
       根据需要，重新创建触发器、存储过程、索引和外键
25.备份！！！！！！！！！！！
26.DROP TABLE tablename；删除表，不可逆操作。
27.RENAME TABLE name1 TO name2；’可以一次重命名多个表，用逗号分隔。


